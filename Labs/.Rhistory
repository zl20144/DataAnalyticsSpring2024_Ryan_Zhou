q()
#Creating a dataframe
#Example RPI Weather dataframe.
days <- c('Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun') # days
temp <- c(28,30.5,32,31.2,29.3,27.9, 26.4) # Temperature in F' during the winter :)
snowed <- c('T','T','F','F','T','T','F') # Snowed on that day: T = TRUE, F = FALSE
help("data.frame")
RPI_Weather_Week <- data.frame(days, temp, snowed) # creating the dataframe using the data.frame() function
RPI_Weather_Week
head(RPI_Weather_Week) # head of the data frame, NOTE: it will show only 6 rows, ususally head() function shows the
str(RPI_Weather_Week) # we can take a look at the structure of the dataframe using the str() function.
summary(RPI_Weather_Week) # summary of the dataframe using the summaty() function
RPI_Weather_Week[1,] # showing the 1st row and all the columns
RPI_Weather_Week[,1] # showing the 1st column and all the rows
RPI_Weather_Week[,'snowed']
RPI_Weather_Week[,'days']
RPI_Weather_Week[,'temp']
RPI_Weather_Week[1:5,c("days","temp")]
RPI_Weather_Week$temp
subset(RPI_Weather_Week, subset=snowed==TRUE)
sorted.snowed <- order(RPI_Weather_Week['snowed'])
RPI_Weather_Week[sorted.snowed,]
v1 <- 1:10
v1
letters
v2 <- letters[1:10]
df <- data.frame(col.name.1 = v1, col.name.2 = v2)
df
# importing data and exporting data
# writing to a CSV file:
write.csv(df, file = 'saved_df1.csv')
df2 = read.csv('saved_df1.csv')
df2
help.start()
install.packages("xlsx")
?Sys.setlocale
Sys.getlocale (category = "LC_ALL")
setwd("D:/Database Copy/zl20144 DB/High School~Belongings/School/School Files/Year 23/Data Analytics/Assignments/DataAnalyticsSpring2024_Ryan_Zhou/Labs")
help(xlsx)
??xlsx
EPI_data <- read.csv("2010EPI_data.csv")
EPI_data
View(EPI_data)
install.packages("readxl")
data_2010EPI <- read.csv("2010EPI_data.csv")
# How to change the first row to be the header in R?
names(data_2010EPI) <- as.matrix(data_2010EPI[1, ])
data_2010EPI <- data_2010EPI[-1, ]
data_2010EPI[] <- lapply(data_2010EPI, function(x)
type.convert(as.character(x)))
data_2010EPI
View(data_2010EPI)
View(EPI_data)
View(EPI_data)
shapiro.test(data_2010EPI$EPI)
shapiro.test(data_2010EPI$EPI_DALY)
summary(EPI)
summary(data_2010EPI$EPI)
boxplot(data_2010EPI$EPI)
stem(data_2010EPI$EPI)
hist(data_2010EPI$EPI)
View(data_2010EPI)
attach(data_2010EPI)
fix(data_2010EPI)
EPI
fix(data_2010EPI)
EPI
tf <- is.na(EPI) # records True values if the value is NA
E <- EPI[!tf] # filters out NA values, new array
E <- EPI[!tf] # filters out NA values, new array
summary(EPI) # stats
fivenum(EPI,na.rm=TRUE)
stem(EPI)
hist(EPI)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
rug(EPI)
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
lines(density(EPI,na.rm=TRUE,bw=SJ)) # or try bw=“SJ”
hist(EPI, seq(30., 95., 1.0), prob=TRUE)
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
rug(EPI)
rug(EPI)
plot(ecdf(EPI), do.points=FALSE, verticals=TRUE)
par(pty="s")
qqnorm(EPI); qqline(EPI)
qqnorm(EPI); qqline(EPI)
x<-seq(30,95,1)
qqplot(qt(ppoints(250), df = 5), x, xlab = "Q-Q plot for tdsn")
qqline(x)
boxplot(EPI, DALY)
boxplot(EPI, DALY)
qqplot(EPI,DALY)
help(distributions)
